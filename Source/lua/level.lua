---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ninovanhooff.
--- DateTime: 11/03/2022 16:29
---

import "util.lua"

local file <const> = playdate.file
local unpack <const> = string.unpack


function LoadFile(path)
    printf("loading ".. path)

    levelT, brickT, specialT, levelProps = nil, nil, nil
    sample("GC", function() collectgarbage("collect")end, 1)

    local levelT
    sample("pdz load", function() levelT = file.run(path..".pdz") end, 1)
    levelProps = levelT["levelProps"]
    levelProps.lives = levelProps.lives or 5
    specialT = levelT["specialT"]
    brickT = {}
    local format = levelProps.packFormat
    local packSize = string.packsize(format)
    local packSizeOffset = packSize-1

    local unpackMeta = {
        __index = function(tbl, idx)
            -- tbl[1] contains the packed string.
            -- idx*5-4: each tile entry is 5 bytes long,
            -- for idx 1 we should start reading at pos 1. So, 1*packSize-packSizeOffset = 1
            return {unpack(format, tbl["compressed"], idx*packSize-packSizeOffset)}
        end
    }

    sample("bin load", function()
        local brickFile = file.open(path..".bin")
        for x = 1, levelProps.sizeX do

            brickT[x]= setmetatable({compressed = brickFile:read(5*levelProps.sizeY)}, unpackMeta)
        end
    end, 1)

    printf("loaded dim",#brickT,#brickT[1])

    return true
end
