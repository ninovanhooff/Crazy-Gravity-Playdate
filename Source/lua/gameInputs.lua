---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ninovanhooff.
--- DateTime: 13/03/2022 00:13
---

import "input/InputManager"

local getButtonState <const> = playdate.getButtonState
local buttonState = 0

local inputManager = inputManager
local throttle <const> = InputManager.actionThrottle
local selfRight <const> = InputManager.actionSelfRight
local left <const> = InputManager.actionLeft
local right <const> = InputManager.actionRight


--- counter for the current rotation timeout. positive is clockwise timeout, negative is ccw timeout
local rotationTimeout = 0

local sinThrustT <const> = sinThrustT
local cosThrustT <const> = cosThrustT

function ProcessInputs()
    buttonState = getButtonState()
    -- thrust
    if (inputManager:isInputPressed(throttle) and fuel > 0) then
        if Sounds and thrust == 0 then thrust_sound:play(0) end
        thrust = 1
        if not Debug then
            fuel = fuel - burnRate
        end
        fuelSpent = fuelSpent + burnRate/10
        if not flying then
            vx = 0
            vy = 0
        end
        flying = true
        vx = vx + cosThrustT[planeRot]*(thrustPower+extras[1]*turboPower)
        vy = vy - sinThrustT[planeRot]*(thrustPower+extras[1]*turboPower)
    elseif thrust == 1 then
        if Sounds then thrust_sound:stop() end
        thrust = 0
    end

    -- rotation
    if inputManager:isInputPressed(selfRight) then
        if planeRot~=18 then
            if planeRot>18 or planeRot<6 then
                planeRot = planeRot-1
            else
                planeRot = planeRot+1
            end
        end
        if planeRot<0 then planeRot = 23 end
        rotationTimeout = 0
    elseif inputManager:isInputPressed(left) then
        if rotationTimeout > 0 then
            -- cancel clockwise rotation timeout
            rotationTimeout = 0
        end
        if flying and rotationTimeout == 0 then
            planeRot = planeRot - 1
            if planeRot<0 then
                planeRot = 23
            end
            rotationTimeout = -rotationDelay -- negative for left rotation
        else
            rotationTimeout = rotationTimeout + 1
        end
    elseif inputManager:isInputPressed(right) then
        if rotationTimeout < 0 then
            -- cancel counter-clockwise rotation timeout
            rotationTimeout = 0
        end
        if flying and rotationTimeout == 0 then
            planeRot = planeRot + 1
            planeRot = planeRot % 24
            rotationTimeout = rotationDelay
        else
            rotationTimeout = rotationTimeout - 1
        end
    else
        rotationTimeout = 0
    end
end

function isThrottleJustPressed()
    return inputManager:isInputJustPressed(throttle)
end
