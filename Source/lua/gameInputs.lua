---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ninovanhooff.
--- DateTime: 13/03/2022 00:13
---
require "lua/tutorial/TakeOffLandingScreen"

local random <const> = math.random
local clampPlaneRotation <const> = clampPlaneRotation
local thrust_sound <const> = thrust_sound

local inputManager = inputManager
local throttle <const> = Actions.Throttle
local selfRight <const> = Actions.SelfRight

local sinThrustT <const> = sinThrustT
local cosThrustT <const> = cosThrustT

function ProcessInputs()
    if landedAt and inputManager:isTakeOffLandingBlocked(planeRot) then
        pushScreen(TakeOffLandingScreen())
        return
    end

    -- thrust
    if (inputManager:isInputPressed(throttle) and fuel > 0) then
        if Sounds and thrust == 0 then thrust_sound:play(0, 0.98 + random() * 0.04) end
        thrust = 1
        if not Debug then
            fuel = fuel - burnRate
        end
        fuelSpent = fuelSpent + burnRate/10
        if not flying then
            vx = 0
            vy = 0
        end
        flying = true
        vx = vx + cosThrustT[planeRot]*(thrustPower+extras[1]*turboPower)
        vy = vy - sinThrustT[planeRot]*(thrustPower+extras[1]*turboPower)
    elseif thrust == 1 then
        if Sounds then thrust_sound:stop() end
        thrust = 0
    end

    -- rotation
    local rotationInput = inputManager:rotationInput(planeRot)
    if rotationInput and flying and not steeringDisabled then
        planeRot = rotationInput
    elseif inputManager:isInputPressed(selfRight) then
            if planeRot~=18 then
                if planeRot>18 or planeRot<6 then
                    planeRot = planeRot-1
                else
                    planeRot = planeRot+1
                end
            end
            planeRot = clampPlaneRotation(planeRot)
            inputManager:resetRotationTimeout()
    else
        inputManager:resetRotationTimeout()
    end
end

function isThrottleJustPressed()
    return inputManager:isInputJustPressed(throttle)
end
