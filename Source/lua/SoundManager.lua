---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ninovanhooff.
--- DateTime: 13/11/2022 16:11
---

local min <const> = math.min
local random <const> = math.random
local distanceToPoint <const> = playdate.geometry.distanceToPoint
local halfWidthTiles <const> = math.ceil(gameWidthTiles*0.5)
local halfHeightTiles <const> = math.ceil(gameHeightTiles*0.5)
--- distance in tiles at which a sound cannot be heard anymore
local SOUND_DISTANCE_INFINITE <const> = 50

class("SoundManager").extends()

function SoundManager:init()
    self.volume = 1.0
end

if not soundManager then
    soundManager = SoundManager()
else
    print("WARN sound manager initiated multiple times")
end

local function playRandomPitch(player, times)
    player:play(times, 0.98 + random() * 0.04)
end

function SoundManager:notifySoundCalcStart()
    self.minBarrierSoundDistance = SOUND_DISTANCE_INFINITE
end

function SoundManager:notifySoundCalcEnd()
    local barrier_sound <const> = barrier_sound
    if barrier_sound and self.minBarrierSoundDistance < SOUND_DISTANCE_INFINITE then
        local volume = self.volume*(1.0-(self.minBarrierSoundDistance/SOUND_DISTANCE_INFINITE))
        print("barrier vol", volume)
        barrier_sound:setVolume(volume)
        if not barrier_sound:isPlaying() then
            playRandomPitch(barrier_sound, 0)
        end
    elseif barrier_sound and barrier_sound:isPlaying() then
        barrier_sound:stop()
    end
end

function SoundManager:addSoundForItem(item)
    local distance = distanceToPoint(item.x, item.y, camPos[1]+halfWidthTiles, camPos[2]+halfHeightTiles)
    if item.sType == 14 or item.sType == 15 then -- barrier or 1way
        self.minBarrierSoundDistance = min(self.minBarrierSoundDistance, distance)
    end
    print("add", distance, self.minBarrierSoundDistance)
end
