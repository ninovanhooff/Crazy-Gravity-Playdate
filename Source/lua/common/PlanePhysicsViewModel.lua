---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by ninovanhooff.
--- DateTime: 11/09/2022 22:15
---


local random <const> = math.random
local clampPlaneRotation <const> = clampPlaneRotation
local inputManager <const> = inputManager
local throttle <const> = Actions.Throttle
local selfRight <const> = Actions.SelfRight
local sinThrustT <const> = sinThrustT
local cosThrustT <const> = cosThrustT
local screenWidth <const> = screenWidth
local screenHeight <const> = screenHeight
local thrust_sound <const> = thrust_sound


class("PlanePhysicsViewModel").extends()

function PlanePhysicsViewModel:init()
    PlanePhysicsViewModel.super.init(self)
    self.flying = true -- always true for StartScreen
    self.planeX, self.planeY = 100,100
    self.vx,self.vy,self.planeRot,self.thrust = 0,0,18,0
end

function PlanePhysicsViewModel:calcPlane()
    self.vx = self.vx*drag
    self.vy = (self.vy+gravity)*drag
    self.planeX = self.planeX + self.vx
    self.planeY = self.planeY + self.vy
    if self.planeX > screenWidth or self.planeX + planeSize < 0 then
        self.planeX = self.planeX % screenWidth
    end
    if self.planeY > screenHeight or self.planeY + planeSize < 0 then
        self.planeY = self.planeY % screenHeight
    end
end

function PlanePhysicsViewModel:processInputs()
    -- self.thrust
    if (inputManager:isInputPressed(throttle)) then
        if Sounds and self.thrust == 0 then
            thrust_sound:play(0, 0.98 + random() * 0.04)
        end
        self.thrust = 1
        if not self.flying then
            self.vx = 0
            self.vy = 0
        end
        self.flying = true
        self.vx = self.vx + cosThrustT[self.planeRot]*thrustPower
        self.vy = self.vy - sinThrustT[self.planeRot]*thrustPower
    elseif self.thrust == 1 then
        if Sounds then thrust_sound:stop() end
        self.thrust = 0
    end

    -- rotation
    local rotationInput = inputManager:rotationInput(self.planeRot)
    if rotationInput then
        self.planeRot = rotationInput
    elseif inputManager:isInputPressed(selfRight) then
            if self.planeRot~=18 then
                if self.planeRot>18 or self.planeRot<6 then
                    self.planeRot = self.planeRot-1
                else
                    self.planeRot = self.planeRot+1
                end
            end
            self.planeRot = clampPlaneRotation(self.planeRot)
            inputManager:resetRotationTimeout()
    end
end
